{"ast":null,"code":"var _jsxFileName = \"/Users/sidharthchoudhary/nexusar-website/src/components/Dashboard/AcademicInfo.js\",\n    _s = $RefreshSig$();\n\nimport { Container, Grid } from '@mui/material';\nimport { Box } from '@mui/system';\nimport { useHistory } from 'react-router';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useState, useEffect } from 'react';\nimport { auth } from '../../services/firebase';\nimport useInput from '../../hooks/use-input';\nimport InputField from '../ui/input-field/InputField';\nimport InputFile from '../ui/input-file/InputFile';\nimport Loading from '../../pages/Loading';\nimport { getEmployeeAcademicInfo, postEmployeeAcademicInfo } from '../../services/firestore-queries';\nimport SuccessSnackbar from './SuccessSnackbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isNotEmpty = value => value.trim() !== '';\n\nconst AcademicInfo = () => {\n  _s();\n\n  const history = useHistory();\n  const [user, loading, error] = useAuthState(auth);\n  const [academicData, setAcademicData] = useState({});\n  const [open, setOpen] = useState(false);\n  useEffect(() => {\n    if (error) alert(error);\n    if (loading) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 25\n    }, this);\n    if (!user) history.replace('/login');\n    if (user) getEmployeeAcademicInfo(user.uid, setAcademicData);\n  }, [user, loading, error, history]);\n  const [resumeValue, setResumeValue] = useState('');\n  const [UGGradeSheetValue, setUGGradeSheetValue] = useState('');\n  const [UGDegreeSheetValue, setUGDegreeSheetValue] = useState('');\n  const [PGGradeSheetValue, setPGGradeSheetValue] = useState('');\n  const [PGDegreeSheetValue, setPGDegreeSheetValue] = useState('');\n  let resumeIsValid = false;\n  useEffect(() => {\n    setResumeValue(academicData.resumeValue);\n    setUGGradeSheetValue(academicData.UGGradeSheetValue);\n    setUGDegreeSheetValue(academicData.UGDegreeSheetValue);\n    setPGGradeSheetValue(academicData.PGGradeSheetValue);\n    setPGDegreeSheetValue(academicData.PGDegreeSheetValue);\n  }, [academicData.resumeValue, academicData.UGGradeSheetValue, academicData.UGDegreeSheetValue, academicData.PGGradeSheetValue, academicData.PGDegreeSheetValue]);\n  if (resumeValue) resumeIsValid = isNotEmpty(resumeValue);\n  const {\n    value: linkedinProfileValue,\n    isValid: linkedinProfileIsValid,\n    hasError: linkedinProfileHasError,\n    valueChangeHandler: linkedinProfileChangeHandler,\n    inputBlurHandler: linkedinProfileBlurHandler,\n    reset: resetLinkedinProfile\n  } = useInput(isNotEmpty, academicData.linkedinProfileValue, academicData);\n  const {\n    value: emailAddressValue,\n    isValid: emailAddressIsValid,\n    hasError: emailAddressHasError,\n    valueChangeHandler: emailAddressChangeHandler,\n    inputBlurHandler: emailAddressBlurHandler,\n    reset: resetEmailAddress\n  } = useInput(isNotEmpty, academicData.emailAddressValue);\n  const {\n    value: officalEmailAddressValue,\n    isValid: officalEmailAddressIsValid,\n    hasError: officalEmailAddressHasError,\n    valueChangeHandler: officalEmailAddressChangeHandler,\n    inputBlurHandler: officalEmailAddressBlurHandler,\n    reset: resetOfficalEmailAddress\n  } = useInput(isNotEmpty, academicData.officalEmailAddressValue);\n  const {\n    value: UGCollegeNameValue,\n    isValid: UGCollegeNameIsValid,\n    hasError: UGCollegeNameHasError,\n    valueChangeHandler: UGCollegeNameChangeHandler,\n    inputBlurHandler: UGCollegeNameBlurHandler,\n    reset: resetUGCollegeName\n  } = useInput(isNotEmpty, academicData.UGCollegeNameValue);\n  const {\n    value: UGCGPAValue,\n    isValid: UGCGPAIsValid,\n    hasError: UGCGPAHasError,\n    valueChangeHandler: UGCGPAChangeHandler,\n    inputBlurHandler: UGCGPABlurHandler,\n    reset: resetUGCGPA\n  } = useInput(isNotEmpty, academicData.UGCGPAValue);\n  const {\n    value: PGCollegeNameValue,\n    isValid: PGCollegeNameIsValid,\n    hasError: PGCollegeNameHasError,\n    valueChangeHandler: PGCollegeNameChangeHandler,\n    inputBlurHandler: PGCollegeNameBlurHandler,\n    reset: resetPGCollegeName\n  } = useInput(isNotEmpty, academicData.PGCollegeNameValue);\n  const {\n    value: PGCGPAValue,\n    isValid: PGCGPAIsValid,\n    hasError: PGCGPAHasError,\n    valueChangeHandler: PGCGPAChangeHandler,\n    inputBlurHandler: PGCGPABlurHandler,\n    reset: resetPGCGPA\n  } = useInput(isNotEmpty, academicData.PGCGPAValue);\n  const formIsValid = resumeIsValid && linkedinProfileIsValid && emailAddressIsValid && officalEmailAddressIsValid && UGCollegeNameIsValid && UGCGPAIsValid && PGCollegeNameIsValid && PGCGPAIsValid;\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    if (!formIsValid) return;\n    const formData = {\n      resumeValue,\n      linkedinProfileValue,\n      emailAddressValue,\n      officalEmailAddressValue,\n      UGCollegeNameValue,\n      UGCGPAValue,\n      UGGradeSheetValue,\n      UGDegreeSheetValue,\n      PGCollegeNameValue,\n      PGCGPAValue,\n      PGGradeSheetValue,\n      PGDegreeSheetValue\n    };\n    postEmployeeAcademicInfo(user.uid, formData);\n    setOpen(true);\n    resetLinkedinProfile();\n    resetEmailAddress();\n    resetOfficalEmailAddress();\n    resetUGCollegeName();\n    resetUGCGPA();\n    resetPGCollegeName();\n    resetPGCGPA();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      py: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your academic information.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This section has all the information about your acads.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        pb: 4\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: \"12\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(InputFile, {\n            label: \"Upload Resume (in PDF format)\",\n            value: resumeValue,\n            folderName: user.uid,\n            setValue: setResumeValue,\n            placeholder: \"Upload your Resume\",\n            field: \"resumeValue\",\n            collectionName: \"EmployeeAcademicInfo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(InputField, {\n            label: \"Linkedin Profile URL\",\n            type: \"url\",\n            valueChangeHandler: linkedinProfileChangeHandler,\n            inputBlurHandler: linkedinProfileBlurHandler,\n            hasError: linkedinProfileHasError,\n            value: linkedinProfileValue,\n            placeholder: \"https://www.linkedin.com/in/ab-satyaprakash/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: \"12\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(InputField, {\n            label: \"Email Adress\",\n            type: \"email\",\n            valueChangeHandler: emailAddressChangeHandler,\n            inputBlurHandler: emailAddressBlurHandler,\n            hasError: emailAddressHasError,\n            value: emailAddressValue,\n            placeholder: \"mark.zuckerberg@gmail.com\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(InputField, {\n            label: \"Offical Email Address\",\n            type: \"email\",\n            valueChangeHandler: officalEmailAddressChangeHandler,\n            inputBlurHandler: officalEmailAddressBlurHandler,\n            hasError: officalEmailAddressHasError,\n            value: officalEmailAddressValue,\n            placeholder: \"mark.zuckerberg@facebook.com\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: \"12\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(InputField, {\n            label: \"UG College Name\",\n            type: \"text\",\n            valueChangeHandler: UGCollegeNameChangeHandler,\n            inputBlurHandler: UGCollegeNameBlurHandler,\n            hasError: UGCollegeNameHasError,\n            value: UGCollegeNameValue,\n            placeholder: \"IIT Guwahati\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(InputField, {\n            label: \"UG CGPA (or current CGPA)\",\n            type: \"number\",\n            valueChangeHandler: UGCGPAChangeHandler,\n            inputBlurHandler: UGCGPABlurHandler,\n            hasError: UGCGPAHasError,\n            value: UGCGPAValue,\n            placeholder: \"9.02\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: \"12\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(InputFile, {\n            label: \"Upload UG Gradesheet (in PDF Format)\",\n            value: UGGradeSheetValue,\n            folderName: user.uid,\n            setValue: setUGGradeSheetValue,\n            placeholder: \"Upload your UG Gradesheet\",\n            field: \"UGGradeSheetValue\",\n            collectionName: \"EmployeeAcademicInfo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(InputFile, {\n            label: \"Upload UG Degree (in PDF Format)\",\n            value: UGDegreeSheetValue,\n            folderName: user.uid,\n            setValue: setUGDegreeSheetValue,\n            placeholder: \"Upload your UG Degreesheet\",\n            field: \"UGDegreeSheetValue\",\n            collectionName: \"EmployeeAcademicInfo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: \"12\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(InputField, {\n            label: \"PG College Name\",\n            type: \"text\",\n            valueChangeHandler: PGCollegeNameChangeHandler,\n            inputBlurHandler: PGCollegeNameBlurHandler,\n            hasError: PGCollegeNameHasError,\n            value: PGCollegeNameValue,\n            placeholder: \"MIT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(InputField, {\n            label: \"PG CGPA (or current CGPA)\",\n            type: \"number\",\n            valueChangeHandler: PGCGPAChangeHandler,\n            inputBlurHandler: PGCGPABlurHandler,\n            hasError: PGCGPAHasError,\n            value: PGCGPAValue,\n            placeholder: \"3.92\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: \"12\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(InputFile, {\n            label: \"Upload PG Gradesheet (in PDF Format)\",\n            value: PGGradeSheetValue,\n            folderName: user.uid,\n            setValue: setPGGradeSheetValue,\n            placeholder: \"Upload your PG Gradesheet\",\n            field: \"PGGradeSheetValue\",\n            collectionName: \"EmployeeAcademicInfo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(InputFile, {\n            label: \"Upload PG Degree (in PDF Format)\",\n            value: PGDegreeSheetValue,\n            folderName: user.uid,\n            setValue: setPGDegreeSheetValue,\n            placeholder: \"Upload your PG Degreesheet\",\n            field: \"PGDegreeSheetValue\",\n            collectionName: \"EmployeeAcademicInfo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        sx: {\n          py: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 4,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"form-button\",\n            type: \"submit\",\n            disabled: !formIsValid,\n            children: \"Update Academic Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SuccessSnackbar, {\n      open: open,\n      setOpen: setOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AcademicInfo, \"dEvyRndW81SlsWlZfIUISE5AzbA=\", false, function () {\n  return [useHistory, useAuthState, useInput, useInput, useInput, useInput, useInput, useInput, useInput];\n});\n\n_c = AcademicInfo;\nexport default AcademicInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AcademicInfo\");","map":{"version":3,"sources":["/Users/sidharthchoudhary/nexusar-website/src/components/Dashboard/AcademicInfo.js"],"names":["Container","Grid","Box","useHistory","useAuthState","useState","useEffect","auth","useInput","InputField","InputFile","Loading","getEmployeeAcademicInfo","postEmployeeAcademicInfo","SuccessSnackbar","isNotEmpty","value","trim","AcademicInfo","history","user","loading","error","academicData","setAcademicData","open","setOpen","alert","replace","uid","resumeValue","setResumeValue","UGGradeSheetValue","setUGGradeSheetValue","UGDegreeSheetValue","setUGDegreeSheetValue","PGGradeSheetValue","setPGGradeSheetValue","PGDegreeSheetValue","setPGDegreeSheetValue","resumeIsValid","linkedinProfileValue","isValid","linkedinProfileIsValid","hasError","linkedinProfileHasError","valueChangeHandler","linkedinProfileChangeHandler","inputBlurHandler","linkedinProfileBlurHandler","reset","resetLinkedinProfile","emailAddressValue","emailAddressIsValid","emailAddressHasError","emailAddressChangeHandler","emailAddressBlurHandler","resetEmailAddress","officalEmailAddressValue","officalEmailAddressIsValid","officalEmailAddressHasError","officalEmailAddressChangeHandler","officalEmailAddressBlurHandler","resetOfficalEmailAddress","UGCollegeNameValue","UGCollegeNameIsValid","UGCollegeNameHasError","UGCollegeNameChangeHandler","UGCollegeNameBlurHandler","resetUGCollegeName","UGCGPAValue","UGCGPAIsValid","UGCGPAHasError","UGCGPAChangeHandler","UGCGPABlurHandler","resetUGCGPA","PGCollegeNameValue","PGCollegeNameIsValid","PGCollegeNameHasError","PGCollegeNameChangeHandler","PGCollegeNameBlurHandler","resetPGCollegeName","PGCGPAValue","PGCGPAIsValid","PGCGPAHasError","PGCGPAChangeHandler","PGCGPABlurHandler","resetPGCGPA","formIsValid","formSubmitHandler","event","preventDefault","formData","py","pb"],"mappings":"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","sourcesContent":["import { Container, Grid } from '@mui/material';\nimport { Box } from '@mui/system';\nimport { useHistory } from 'react-router';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useState, useEffect } from 'react';\nimport { auth } from '../../services/firebase';\nimport useInput from '../../hooks/use-input';\nimport InputField from '../ui/input-field/InputField';\nimport InputFile from '../ui/input-file/InputFile';\nimport Loading from '../../pages/Loading';\nimport { getEmployeeAcademicInfo, postEmployeeAcademicInfo } from '../../services/firestore-queries';\nimport SuccessSnackbar from './SuccessSnackbar';\n\nconst isNotEmpty = (value) => value.trim() !== '';\n\nconst AcademicInfo = () => {\n  const history = useHistory();\n  const [user, loading, error] = useAuthState(auth);\n  const [academicData, setAcademicData] = useState({});\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    if (error) alert(error);\n    if (loading) return <Loading />;\n    if (!user) history.replace('/login');\n    if (user) getEmployeeAcademicInfo(user.uid, setAcademicData);\n  }, [user, loading, error, history]);\n\n  const [resumeValue, setResumeValue] = useState('');\n  const [UGGradeSheetValue, setUGGradeSheetValue] = useState('');\n  const [UGDegreeSheetValue, setUGDegreeSheetValue] = useState('');\n  const [PGGradeSheetValue, setPGGradeSheetValue] = useState('');\n  const [PGDegreeSheetValue, setPGDegreeSheetValue] = useState('');\n  let resumeIsValid = false;\n\n  useEffect(() => {\n    setResumeValue(academicData.resumeValue);\n    setUGGradeSheetValue(academicData.UGGradeSheetValue);\n    setUGDegreeSheetValue(academicData.UGDegreeSheetValue);\n    setPGGradeSheetValue(academicData.PGGradeSheetValue);\n    setPGDegreeSheetValue(academicData.PGDegreeSheetValue);\n  }, [\n    academicData.resumeValue,\n    academicData.UGGradeSheetValue,\n    academicData.UGDegreeSheetValue,\n    academicData.PGGradeSheetValue,\n    academicData.PGDegreeSheetValue,\n  ]);\n\n  if (resumeValue) resumeIsValid = isNotEmpty(resumeValue);\n\n  const {\n    value: linkedinProfileValue,\n    isValid: linkedinProfileIsValid,\n    hasError: linkedinProfileHasError,\n    valueChangeHandler: linkedinProfileChangeHandler,\n    inputBlurHandler: linkedinProfileBlurHandler,\n    reset: resetLinkedinProfile,\n  } = useInput(isNotEmpty, academicData.linkedinProfileValue, academicData);\n\n  const {\n    value: emailAddressValue,\n    isValid: emailAddressIsValid,\n    hasError: emailAddressHasError,\n    valueChangeHandler: emailAddressChangeHandler,\n    inputBlurHandler: emailAddressBlurHandler,\n    reset: resetEmailAddress,\n  } = useInput(isNotEmpty, academicData.emailAddressValue);\n\n  const {\n    value: officalEmailAddressValue,\n    isValid: officalEmailAddressIsValid,\n    hasError: officalEmailAddressHasError,\n    valueChangeHandler: officalEmailAddressChangeHandler,\n    inputBlurHandler: officalEmailAddressBlurHandler,\n    reset: resetOfficalEmailAddress,\n  } = useInput(isNotEmpty, academicData.officalEmailAddressValue);\n\n  const {\n    value: UGCollegeNameValue,\n    isValid: UGCollegeNameIsValid,\n    hasError: UGCollegeNameHasError,\n    valueChangeHandler: UGCollegeNameChangeHandler,\n    inputBlurHandler: UGCollegeNameBlurHandler,\n    reset: resetUGCollegeName,\n  } = useInput(isNotEmpty, academicData.UGCollegeNameValue);\n\n  const {\n    value: UGCGPAValue,\n    isValid: UGCGPAIsValid,\n    hasError: UGCGPAHasError,\n    valueChangeHandler: UGCGPAChangeHandler,\n    inputBlurHandler: UGCGPABlurHandler,\n    reset: resetUGCGPA,\n  } = useInput(isNotEmpty, academicData.UGCGPAValue);\n\n  const {\n    value: PGCollegeNameValue,\n    isValid: PGCollegeNameIsValid,\n    hasError: PGCollegeNameHasError,\n    valueChangeHandler: PGCollegeNameChangeHandler,\n    inputBlurHandler: PGCollegeNameBlurHandler,\n    reset: resetPGCollegeName,\n  } = useInput(isNotEmpty, academicData.PGCollegeNameValue);\n\n  const {\n    value: PGCGPAValue,\n    isValid: PGCGPAIsValid,\n    hasError: PGCGPAHasError,\n    valueChangeHandler: PGCGPAChangeHandler,\n    inputBlurHandler: PGCGPABlurHandler,\n    reset: resetPGCGPA,\n  } = useInput(isNotEmpty, academicData.PGCGPAValue);\n\n  const formIsValid =\n    resumeIsValid &&\n    linkedinProfileIsValid &&\n    emailAddressIsValid &&\n    officalEmailAddressIsValid &&\n    UGCollegeNameIsValid &&\n    UGCGPAIsValid &&\n    PGCollegeNameIsValid &&\n    PGCGPAIsValid;\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n    if (!formIsValid) return;\n\n    const formData = {\n      resumeValue,\n      linkedinProfileValue,\n      emailAddressValue,\n      officalEmailAddressValue,\n      UGCollegeNameValue,\n      UGCGPAValue,\n      UGGradeSheetValue,\n      UGDegreeSheetValue,\n      PGCollegeNameValue,\n      PGCGPAValue,\n      PGGradeSheetValue,\n      PGDegreeSheetValue,\n    };\n\n    postEmployeeAcademicInfo(user.uid, formData);\n    setOpen(true);\n\n    resetLinkedinProfile();\n    resetEmailAddress();\n    resetOfficalEmailAddress();\n    resetUGCollegeName();\n    resetUGCGPA();\n    resetPGCollegeName();\n    resetPGCGPA();\n  };\n\n  return (\n    <Container sx={{ py: 4 }}>\n      <h2>Your academic information.</h2>\n      <p>This section has all the information about your acads.</p>\n      <Box sx={{ pb: 4 }}></Box>\n\n      <form onSubmit={formSubmitHandler}>\n        <Grid container spacing=\"12\">\n          <Grid item xs={12} sm={6}>\n            <InputFile\n              label=\"Upload Resume (in PDF format)\"\n              value={resumeValue}\n              folderName={user.uid}\n              setValue={setResumeValue}\n              placeholder=\"Upload your Resume\"\n              field=\"resumeValue\"\n              collectionName=\"EmployeeAcademicInfo\"\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <InputField\n              label=\"Linkedin Profile URL\"\n              type=\"url\"\n              valueChangeHandler={linkedinProfileChangeHandler}\n              inputBlurHandler={linkedinProfileBlurHandler}\n              hasError={linkedinProfileHasError}\n              value={linkedinProfileValue}\n              placeholder=\"https://www.linkedin.com/in/ab-satyaprakash/\"\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container spacing=\"12\">\n          <Grid item xs={12} sm={6}>\n            <InputField\n              label=\"Email Adress\"\n              type=\"email\"\n              valueChangeHandler={emailAddressChangeHandler}\n              inputBlurHandler={emailAddressBlurHandler}\n              hasError={emailAddressHasError}\n              value={emailAddressValue}\n              placeholder=\"mark.zuckerberg@gmail.com\"\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <InputField\n              label=\"Offical Email Address\"\n              type=\"email\"\n              valueChangeHandler={officalEmailAddressChangeHandler}\n              inputBlurHandler={officalEmailAddressBlurHandler}\n              hasError={officalEmailAddressHasError}\n              value={officalEmailAddressValue}\n              placeholder=\"mark.zuckerberg@facebook.com\"\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container spacing=\"12\">\n          <Grid item xs={12} sm={6}>\n            <InputField\n              label=\"UG College Name\"\n              type=\"text\"\n              valueChangeHandler={UGCollegeNameChangeHandler}\n              inputBlurHandler={UGCollegeNameBlurHandler}\n              hasError={UGCollegeNameHasError}\n              value={UGCollegeNameValue}\n              placeholder=\"IIT Guwahati\"\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <InputField\n              label=\"UG CGPA (or current CGPA)\"\n              type=\"number\"\n              valueChangeHandler={UGCGPAChangeHandler}\n              inputBlurHandler={UGCGPABlurHandler}\n              hasError={UGCGPAHasError}\n              value={UGCGPAValue}\n              placeholder=\"9.02\"\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container spacing=\"12\">\n          <Grid item xs={12} sm={6}>\n            <InputFile\n              label=\"Upload UG Gradesheet (in PDF Format)\"\n              value={UGGradeSheetValue}\n              folderName={user.uid}\n              setValue={setUGGradeSheetValue}\n              placeholder=\"Upload your UG Gradesheet\"\n              field=\"UGGradeSheetValue\"\n              collectionName=\"EmployeeAcademicInfo\"\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <InputFile\n              label=\"Upload UG Degree (in PDF Format)\"\n              value={UGDegreeSheetValue}\n              folderName={user.uid}\n              setValue={setUGDegreeSheetValue}\n              placeholder=\"Upload your UG Degreesheet\"\n              field=\"UGDegreeSheetValue\"\n              collectionName=\"EmployeeAcademicInfo\"\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container spacing=\"12\">\n          <Grid item xs={12} sm={6}>\n            <InputField\n              label=\"PG College Name\"\n              type=\"text\"\n              valueChangeHandler={PGCollegeNameChangeHandler}\n              inputBlurHandler={PGCollegeNameBlurHandler}\n              hasError={PGCollegeNameHasError}\n              value={PGCollegeNameValue}\n              placeholder=\"MIT\"\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <InputField\n              label=\"PG CGPA (or current CGPA)\"\n              type=\"number\"\n              valueChangeHandler={PGCGPAChangeHandler}\n              inputBlurHandler={PGCGPABlurHandler}\n              hasError={PGCGPAHasError}\n              value={PGCGPAValue}\n              placeholder=\"3.92\"\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container spacing=\"12\">\n          <Grid item xs={12} sm={6}>\n            <InputFile\n              label=\"Upload PG Gradesheet (in PDF Format)\"\n              value={PGGradeSheetValue}\n              folderName={user.uid}\n              setValue={setPGGradeSheetValue}\n              placeholder=\"Upload your PG Gradesheet\"\n              field=\"PGGradeSheetValue\"\n              collectionName=\"EmployeeAcademicInfo\"\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <InputFile\n              label=\"Upload PG Degree (in PDF Format)\"\n              value={PGDegreeSheetValue}\n              folderName={user.uid}\n              setValue={setPGDegreeSheetValue}\n              placeholder=\"Upload your PG Degreesheet\"\n              field=\"PGDegreeSheetValue\"\n              collectionName=\"EmployeeAcademicInfo\"\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container sx={{ py: 4 }}>\n          <Grid item xs={12} sm={4}>\n            <button className=\"form-button\" type=\"submit\" disabled={!formIsValid}>\n              Update Academic Information\n            </button>\n          </Grid>\n        </Grid>\n      </form>\n      <SuccessSnackbar open={open} setOpen={setOpen} />\n    </Container>\n  );\n};\n\nexport default AcademicInfo;\n"]},"metadata":{},"sourceType":"module"}