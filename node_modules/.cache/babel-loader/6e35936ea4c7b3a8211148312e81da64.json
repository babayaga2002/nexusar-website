{"ast":null,"code":"var _jsxFileName = \"/Users/sidharthchoudhary/nexusar-website/src/components/Dashboard/SupervisedEmployees/EmployeeAcademic.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { getEmployeeAcademicInfo } from '../../../services/firestore-queries';\nimport { Box } from '@mui/system';\nimport { Grid, Divider } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EmployeeAcademic = props => {\n  _s();\n\n  const {\n    uid\n  } = props;\n  const [academicData, setAcademicData] = useState('');\n  useEffect(() => {\n    getEmployeeAcademicInfo(uid, setAcademicData);\n  }, [uid]);\n\n  const documentLink = (url, name) => {\n    if (!name) name = url;\n    return /*#__PURE__*/_jsxDEV(\"a\", {\n      target: \"_blank\",\n      rel: \"noreferrer\",\n      href: url,\n      style: {\n        color: '#0071e3',\n        textDecoration: 'underline'\n      },\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  };\n\n  const dataList = [{\n    label: 'Resume (in PDF)',\n    value: documentLink(academicData.resumeValue, 'Resume.pdf')\n  }, {\n    label: 'Linkedin Profile',\n    value: documentLink(academicData.linkedinProfileValue)\n  }, {\n    label: 'Email Address',\n    value: academicData.emailAddressValue\n  }, {\n    label: 'Offical Email Address',\n    value: academicData.officalEmailAddressValue\n  }, {\n    label: 'UG College Name',\n    value: academicData.UGCollegeNameValue\n  }, {\n    label: 'UG CGPA (or current CGPA)',\n    value: academicData.UGCGPAValue\n  }, {\n    label: 'UG Gradesheet (in PDF)',\n    value: documentLink(academicData.UGGradeSheetValue, 'UG-Gradesheet.pdf')\n  }, {\n    label: 'UG Degree (in PDF)',\n    value: documentLink(academicData.UGDegreeSheetValue, 'UG-Degree.pdf')\n  }, {\n    label: 'PG College Name',\n    value: academicData.PGCollegeNameValue\n  }, {\n    label: 'PG CGPA (or current CGPA)',\n    value: academicData.PGCGPAValue\n  }, {\n    label: 'PG Gradesheet (in PDF)',\n    value: documentLink(academicData.PGGradeSheetValue, 'PG-Gradesheet.pdf')\n  }, {\n    label: 'PG Degree (in PDF)',\n    value: documentLink(academicData.PGDegreeSheetValue, 'PG-Degree.pdf')\n  }];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      py: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Academic Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      light: true,\n      style: {\n        margin: '8px 0'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), dataList.map((data, index) => /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      sx: {\n        py: 0.2,\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 5,\n        children: data.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        sx: {\n          wordWrap: 'break-word'\n        },\n        children: data.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, data.label, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EmployeeAcademic, \"9ad4qrbw7kgrYniO/5wi9XNPf7M=\");\n\n_c = EmployeeAcademic;\nexport default EmployeeAcademic;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeAcademic\");","map":{"version":3,"sources":["/Users/sidharthchoudhary/nexusar-website/src/components/Dashboard/SupervisedEmployees/EmployeeAcademic.js"],"names":["useState","useEffect","getEmployeeAcademicInfo","Box","Grid","Divider","EmployeeAcademic","props","uid","academicData","setAcademicData","documentLink","url","name","color","textDecoration","dataList","label","value","resumeValue","linkedinProfileValue","emailAddressValue","officalEmailAddressValue","UGCollegeNameValue","UGCGPAValue","UGGradeSheetValue","UGDegreeSheetValue","PGCollegeNameValue","PGCGPAValue","PGGradeSheetValue","PGDegreeSheetValue","py","margin","map","data","index","alignItems","wordWrap"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { getEmployeeAcademicInfo } from '../../../services/firestore-queries';\nimport { Box } from '@mui/system';\nimport { Grid, Divider } from '@mui/material';\n\nconst EmployeeAcademic = (props) => {\n  const { uid } = props;\n  const [academicData, setAcademicData] = useState('');\n  useEffect(() => {\n    getEmployeeAcademicInfo(uid, setAcademicData);\n  }, [uid]);\n\n  const documentLink = (url, name) => {\n    if (!name) name = url;\n    return (\n      <a target=\"_blank\" rel=\"noreferrer\" href={url} style={{ color: '#0071e3', textDecoration: 'underline' }}>\n        {name}\n      </a>\n    );\n  };\n\n  const dataList = [\n    { label: 'Resume (in PDF)', value: documentLink(academicData.resumeValue, 'Resume.pdf') },\n    { label: 'Linkedin Profile', value: documentLink(academicData.linkedinProfileValue) },\n    { label: 'Email Address', value: academicData.emailAddressValue },\n    { label: 'Offical Email Address', value: academicData.officalEmailAddressValue },\n    { label: 'UG College Name', value: academicData.UGCollegeNameValue },\n    { label: 'UG CGPA (or current CGPA)', value: academicData.UGCGPAValue },\n    { label: 'UG Gradesheet (in PDF)', value: documentLink(academicData.UGGradeSheetValue, 'UG-Gradesheet.pdf') },\n    { label: 'UG Degree (in PDF)', value: documentLink(academicData.UGDegreeSheetValue, 'UG-Degree.pdf') },\n    { label: 'PG College Name', value: academicData.PGCollegeNameValue },\n    { label: 'PG CGPA (or current CGPA)', value: academicData.PGCGPAValue },\n    { label: 'PG Gradesheet (in PDF)', value: documentLink(academicData.PGGradeSheetValue, 'PG-Gradesheet.pdf') },\n    { label: 'PG Degree (in PDF)', value: documentLink(academicData.PGDegreeSheetValue, 'PG-Degree.pdf') },\n  ];\n\n  return (\n    <Box sx={{ py: 2 }}>\n      <h4>Academic Details</h4>\n      <Divider light style={{ margin: '8px 0' }} />\n      {dataList.map((data, index) => (\n        <Grid key={data.label} container sx={{ py: 0.2, alignItems: 'center' }}>\n          <Grid item xs={5}>\n            {data.label}\n          </Grid>\n          <Grid item xs={1} />\n          <Grid item xs={6} sx={{ wordWrap: 'break-word' }}>\n            {data.value}\n          </Grid>\n        </Grid>\n      ))}\n    </Box>\n  );\n};\n\nexport default EmployeeAcademic;\n"]},"metadata":{},"sourceType":"module"}