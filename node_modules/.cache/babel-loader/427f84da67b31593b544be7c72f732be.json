{"ast":null,"code":"var _jsxFileName = \"/Users/sidharthchoudhary/nexusar-website/src/components/Dashboard/SupervisedEmployees/EmployeePersonal.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { getEmployeePersonalInfo } from '../../../services/firestore-queries';\nimport { Box } from '@mui/system';\nimport { Grid, Divider, Avatar } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EmployeePersonal = props => {\n  _s();\n\n  const {\n    uid\n  } = props;\n  const [personalData, setPersonalData] = useState('');\n  useEffect(() => {\n    getEmployeePersonalInfo(uid, setPersonalData);\n  }, [uid]);\n\n  const documentLink = (url, name) => {\n    return /*#__PURE__*/_jsxDEV(\"a\", {\n      target: \"_blank\",\n      rel: \"noreferrer\",\n      href: url,\n      style: {\n        color: '#0071e3',\n        textDecoration: 'underline'\n      },\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  };\n\n  const dataList = [{\n    label: 'Profile Picture',\n    value: /*#__PURE__*/_jsxDEV(Avatar, {\n      alt: personalData.firstNameValue,\n      sx: {\n        width: 100,\n        height: 100,\n        my: 2\n      },\n      src: personalData.profilePictureValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, {\n    label: 'First Name',\n    value: personalData.firstNameValue\n  }, {\n    label: 'Last Name',\n    value: personalData.lastNameValue\n  }, {\n    label: \"Father's Name\",\n    value: personalData.fathersNameValue\n  }, {\n    label: \"Mother's Name\",\n    value: personalData.mothersNameValue\n  }, {\n    label: 'Date of Birth',\n    value: personalData.DOBValue\n  }, {\n    label: 'Phone Number',\n    value: personalData.phoneValue\n  }, {\n    label: 'Office Phone',\n    value: personalData.officePhoneValue\n  }, {\n    label: 'Complete Address',\n    value: personalData.addressValue\n  }, {\n    label: 'Description',\n    value: personalData.describeValue\n  }, {\n    label: 'State',\n    value: personalData.stateValue\n  }, {\n    label: 'Adhaar Number',\n    value: personalData.adhaarNumberValue\n  }, {\n    label: 'PAN (in PDF)',\n    value: documentLink(personalData.PANValue, 'Pan-Card.pdf')\n  }, {\n    label: 'Adhaar (in PDF)',\n    value: documentLink(personalData.adhaarValue, 'Adhaar-Card.pdf')\n  }, {\n    label: 'Reference 1',\n    value: personalData.reference1Value\n  }, {\n    label: 'Reference 2',\n    value: personalData.reference2Value\n  }, {\n    label: 'Mode of Transport',\n    value: personalData.modeOfTransportValue\n  }];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      py: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Personal Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      light: true,\n      style: {\n        margin: '8px 0'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), dataList.map((data, index) => /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      sx: {\n        py: 0.2,\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 5,\n        children: data.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        sx: {\n          wordWrap: 'break-word'\n        },\n        children: data.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, data.label, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EmployeePersonal, \"Rrnmj6xQRrsKnV/4DEUqU79pheE=\");\n\n_c = EmployeePersonal;\nexport default EmployeePersonal;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeePersonal\");","map":{"version":3,"sources":["/Users/sidharthchoudhary/nexusar-website/src/components/Dashboard/SupervisedEmployees/EmployeePersonal.js"],"names":["useState","useEffect","getEmployeePersonalInfo","Box","Grid","Divider","Avatar","EmployeePersonal","props","uid","personalData","setPersonalData","documentLink","url","name","color","textDecoration","dataList","label","value","firstNameValue","width","height","my","profilePictureValue","lastNameValue","fathersNameValue","mothersNameValue","DOBValue","phoneValue","officePhoneValue","addressValue","describeValue","stateValue","adhaarNumberValue","PANValue","adhaarValue","reference1Value","reference2Value","modeOfTransportValue","py","margin","map","data","index","alignItems","wordWrap"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { getEmployeePersonalInfo } from '../../../services/firestore-queries';\nimport { Box } from '@mui/system';\nimport { Grid, Divider, Avatar } from '@mui/material';\n\nconst EmployeePersonal = (props) => {\n  const { uid } = props;\n  const [personalData, setPersonalData] = useState('');\n  useEffect(() => {\n    getEmployeePersonalInfo(uid, setPersonalData);\n  }, [uid]);\n\n  const documentLink = (url, name) => {\n    return (\n      <a target=\"_blank\" rel=\"noreferrer\" href={url} style={{ color: '#0071e3', textDecoration: 'underline' }}>\n        {name}\n      </a>\n    );\n  };\n\n  const dataList = [\n    {\n      label: 'Profile Picture',\n      value: (\n        <Avatar\n          alt={personalData.firstNameValue}\n          sx={{ width: 100, height: 100, my: 2 }}\n          src={personalData.profilePictureValue}\n        />\n      ),\n    },\n    { label: 'First Name', value: personalData.firstNameValue },\n    { label: 'Last Name', value: personalData.lastNameValue },\n    { label: \"Father's Name\", value: personalData.fathersNameValue },\n    { label: \"Mother's Name\", value: personalData.mothersNameValue },\n    { label: 'Date of Birth', value: personalData.DOBValue },\n    { label: 'Phone Number', value: personalData.phoneValue },\n    { label: 'Office Phone', value: personalData.officePhoneValue },\n    { label: 'Complete Address', value: personalData.addressValue },\n    { label: 'Description', value: personalData.describeValue },\n    { label: 'State', value: personalData.stateValue },\n    { label: 'Adhaar Number', value: personalData.adhaarNumberValue },\n    { label: 'PAN (in PDF)', value: documentLink(personalData.PANValue, 'Pan-Card.pdf') },\n    { label: 'Adhaar (in PDF)', value: documentLink(personalData.adhaarValue, 'Adhaar-Card.pdf') },\n    { label: 'Reference 1', value: personalData.reference1Value },\n    { label: 'Reference 2', value: personalData.reference2Value },\n    { label: 'Mode of Transport', value: personalData.modeOfTransportValue },\n  ];\n\n  return (\n    <Box sx={{ py: 2 }}>\n      <h4>Personal Details</h4>\n      <Divider light style={{ margin: '8px 0' }} />\n      {dataList.map((data, index) => (\n        <Grid key={data.label} container sx={{ py: 0.2, alignItems: 'center' }}>\n          <Grid item xs={5}>\n            {data.label}\n          </Grid>\n          <Grid item xs={1} />\n          <Grid item xs={6} sx={{ wordWrap: 'break-word' }}>\n            {data.value}\n          </Grid>\n        </Grid>\n      ))}\n    </Box>\n  );\n};\n\nexport default EmployeePersonal;\n"]},"metadata":{},"sourceType":"module"}