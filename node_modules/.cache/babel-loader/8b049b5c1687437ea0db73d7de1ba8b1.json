{"ast":null,"code":"import _slicedToArray from\"/Users/sidharthchoudhary/nexusar-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import{getEmployeeSkillInfo}from'../../../services/firestore-queries';import{Box}from'@mui/system';import{Grid,Divider}from'@mui/material';import StarRatings from'react-star-ratings';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var EmployeeSkills=function EmployeeSkills(props){var _skillsData$arcGISRat,_skillsData$enviRatin,_skillsData$snapRatin,_skillsData$progLang,_skillsData$progLang2,_skillsData$progLang3,_skillsData$progLang4,_skillsData$progLang5,_skillsData$progLang6,_skillsData$progLang7,_skillsData$progLang8,_skillsData$progLang9,_skillsData$progLang10;var uid=props.uid;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),skillsData=_useState2[0],setSkillsData=_useState2[1];useEffect(function(){getEmployeeSkillInfo(uid,setSkillsData);},[uid]);var stars=function stars(rating){return/*#__PURE__*/_jsx(StarRatings,{rating:rating,starRatedColor:\"#0071e3\",starHoverColor:\"#0071e3\",starDimension:\"24px\",starSpacing:\"4px\"});};var dataList=[{label:'Arc-GIS experience level',value:stars((_skillsData$arcGISRat=skillsData.arcGISRating)===null||_skillsData$arcGISRat===void 0?void 0:_skillsData$arcGISRat.value)},{label:'ENVI experience level',value:stars((_skillsData$enviRatin=skillsData.enviRating)===null||_skillsData$enviRatin===void 0?void 0:_skillsData$enviRatin.value)},{label:'SNAP experience level',value:stars((_skillsData$snapRatin=skillsData.snapRating)===null||_skillsData$snapRatin===void 0?void 0:_skillsData$snapRatin.value)},{label:(_skillsData$progLang=skillsData.progLang1Rating)===null||_skillsData$progLang===void 0?void 0:_skillsData$progLang.label,value:stars((_skillsData$progLang2=skillsData.progLang1Rating)===null||_skillsData$progLang2===void 0?void 0:_skillsData$progLang2.value)},{label:(_skillsData$progLang3=skillsData.progLang2Rating)===null||_skillsData$progLang3===void 0?void 0:_skillsData$progLang3.label,value:stars((_skillsData$progLang4=skillsData.progLang2Rating)===null||_skillsData$progLang4===void 0?void 0:_skillsData$progLang4.value)},{label:(_skillsData$progLang5=skillsData.progLang3Rating)===null||_skillsData$progLang5===void 0?void 0:_skillsData$progLang5.label,value:stars((_skillsData$progLang6=skillsData.progLang3Rating)===null||_skillsData$progLang6===void 0?void 0:_skillsData$progLang6.value)},{label:(_skillsData$progLang7=skillsData.progLang4Rating)===null||_skillsData$progLang7===void 0?void 0:_skillsData$progLang7.label,value:stars((_skillsData$progLang8=skillsData.progLang4Rating)===null||_skillsData$progLang8===void 0?void 0:_skillsData$progLang8.value)},{label:(_skillsData$progLang9=skillsData.progLang5Rating)===null||_skillsData$progLang9===void 0?void 0:_skillsData$progLang9.label,value:stars((_skillsData$progLang10=skillsData.progLang5Rating)===null||_skillsData$progLang10===void 0?void 0:_skillsData$progLang10.value)}];return/*#__PURE__*/_jsxs(Box,{sx:{py:2},children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Skills Details\"}),/*#__PURE__*/_jsx(Divider,{light:true,style:{margin:'8px 0'}}),dataList.map(function(data,index){return/*#__PURE__*/_jsxs(Grid,{container:true,sx:{py:0.2,alignItems:'center'},children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:5,children:data.label}),/*#__PURE__*/_jsx(Grid,{item:true,xs:1}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,sx:{wordWrap:'break-word'},children:data.value})]},Math.random());})]});};export default EmployeeSkills;","map":{"version":3,"sources":["/Users/sidharthchoudhary/nexusar-website/src/components/Dashboard/SupervisedEmployees/EmployeeSkills.js"],"names":["useState","useEffect","getEmployeeSkillInfo","Box","Grid","Divider","StarRatings","EmployeeSkills","props","uid","skillsData","setSkillsData","stars","rating","dataList","label","value","arcGISRating","enviRating","snapRating","progLang1Rating","progLang2Rating","progLang3Rating","progLang4Rating","progLang5Rating","py","margin","map","data","index","alignItems","wordWrap","Math","random"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { getEmployeeSkillInfo } from '../../../services/firestore-queries';\nimport { Box } from '@mui/system';\nimport { Grid, Divider } from '@mui/material';\nimport StarRatings from 'react-star-ratings';\n\nconst EmployeeSkills = (props) => {\n  const { uid } = props;\n  const [skillsData, setSkillsData] = useState('');\n\n  useEffect(() => {\n    getEmployeeSkillInfo(uid, setSkillsData);\n  }, [uid]);\n\n  const stars = (rating) => {\n    return (\n      <StarRatings\n        rating={rating}\n        starRatedColor=\"#0071e3\"\n        starHoverColor=\"#0071e3\"\n        starDimension=\"24px\"\n        starSpacing=\"4px\"\n      />\n    );\n  };\n\n  const dataList = [\n    { label: 'Arc-GIS experience level', value: stars(skillsData.arcGISRating?.value) },\n    { label: 'ENVI experience level', value: stars(skillsData.enviRating?.value) },\n    { label: 'SNAP experience level', value: stars(skillsData.snapRating?.value) },\n    { label: skillsData.progLang1Rating?.label, value: stars(skillsData.progLang1Rating?.value) },\n    { label: skillsData.progLang2Rating?.label, value: stars(skillsData.progLang2Rating?.value) },\n    { label: skillsData.progLang3Rating?.label, value: stars(skillsData.progLang3Rating?.value) },\n    { label: skillsData.progLang4Rating?.label, value: stars(skillsData.progLang4Rating?.value) },\n    { label: skillsData.progLang5Rating?.label, value: stars(skillsData.progLang5Rating?.value) },\n  ];\n\n  return (\n    <Box sx={{ py: 2 }}>\n      <h4>Skills Details</h4>\n      <Divider light style={{ margin: '8px 0' }} />\n      {dataList.map((data, index) => (\n        <Grid key={Math.random()} container sx={{ py: 0.2, alignItems: 'center' }}>\n          <Grid item xs={5}>\n            {data.label}\n          </Grid>\n          <Grid item xs={1} />\n          <Grid item xs={6} sx={{ wordWrap: 'break-word' }}>\n            {data.value}\n          </Grid>\n        </Grid>\n      ))}\n    </Box>\n  );\n};\n\nexport default EmployeeSkills;\n"]},"metadata":{},"sourceType":"module"}