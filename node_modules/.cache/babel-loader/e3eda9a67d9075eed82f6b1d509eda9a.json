{"ast":null,"code":"import _objectSpread from\"/Users/sidharthchoudhary/nexusar-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _defineProperty from\"/Users/sidharthchoudhary/nexusar-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import{db,storage}from'../services/firebase.js';// Add uid for a valid employee to employee database\nvar addEmployeeUserIDToDB=function addEmployeeUserIDToDB(user){db.collection('EmployeeDatabase').doc(user.email).update({uid:user.uid});};// Check if employee is valid or not\nexport var checkEmployeeExists=function checkEmployeeExists(user,setIsEmployee){var userEmail=user.email;var docRef=db.collection('EmployeeDatabase').doc(userEmail);docRef.get().then(function(doc){if(doc.exists){setIsEmployee(true);addEmployeeUserIDToDB(user);}else setIsEmployee(false);}).catch(function(error){return alert(\"The following error was thrown: \".concat(error,\". Please contact support.\"));});};// Employee Personal Information\nexport var postEmployeePersonalInfo=function postEmployeePersonalInfo(uid,formData){db.collection('EmployeePersonalInfo').doc(uid).update(formData);};export var getEmployeePersonalInfo=function getEmployeePersonalInfo(uid,setPersonalData){var docRef=db.collection('EmployeePersonalInfo').doc(uid);docRef.get().then(function(doc){if(doc.exists)setPersonalData(doc.data());}).catch(function(error){return alert(\"The following error was thrown: \".concat(error,\". Please contact support.\"));});};// Employee Academic Information\nexport var postEmployeeAcademicInfo=function postEmployeeAcademicInfo(uid,formData){db.collection('EmployeeAcademicInfo').doc(uid).set(formData);};export var getEmployeeAcademicInfo=function getEmployeeAcademicInfo(uid,setAcademicData){var docRef=db.collection('EmployeeAcademicInfo').doc(uid);docRef.get().then(function(doc){if(doc.exists)setAcademicData(doc.data());}).catch(function(error){return alert(\"The following error was thrown: \".concat(error,\". Please contact support.\"));});};// Employee Work Information\nexport var postEmployeeWorkInfo=function postEmployeeWorkInfo(uid,formData){db.collection('EmployeeWorkInfo').doc(uid).set(formData);};export var getEmployeeWorkInfo=function getEmployeeWorkInfo(uid,setWorkData){var docRef=db.collection('EmployeeWorkInfo').doc(uid);docRef.get().then(function(doc){if(doc.exists)setWorkData(doc.data());}).catch(function(error){return alert(\"The following error was thrown: \".concat(error,\". Please contact support.\"));});};export var getEmployeeProprietaryWorkInfo=function getEmployeeProprietaryWorkInfo(userEmail,setProprietaryWorkData){var docRef=db.collection('EmployeeDatabase').doc(userEmail);docRef.get().then(function(doc){if(doc.exists)setProprietaryWorkData(doc.data());}).catch(function(error){return alert(\"The following error was thrown: \".concat(error,\". Please contact support.\"));});};// Employee Skill Information\nexport var postEmployeeSkillInfo=function postEmployeeSkillInfo(uid,formData){db.collection('EmployeeSkillInfo').doc(uid).set(formData);};export var getEmployeeSkillInfo=function getEmployeeSkillInfo(uid,setSkillData){var docRef=db.collection('EmployeeSkillInfo').doc(uid);docRef.get().then(function(doc){if(doc.exists)setSkillData(doc.data());}).catch(function(error){return alert(\"The following error was thrown: \".concat(error,\". Please contact support.\"));});};// Employee Bank Information\nexport var postEmployeeBankInfo=function postEmployeeBankInfo(uid,formData){db.collection('EmployeeBankInfo').doc(uid).set(formData);};export var getEmployeeBankInfo=function getEmployeeBankInfo(uid,setBankData){var docRef=db.collection('EmployeeBankInfo').doc(uid);docRef.get().then(function(doc){if(doc.exists)setBankData(doc.data());}).catch(function(error){return alert(\"The following error was thrown: \".concat(error,\". Please contact support.\"));});};// List all supervised employees under an employee\n// Send data back as - List of Objects - [{uid: , name: , position: },{...},{...}]\nexport var getSupervisedEmployeesList=function getSupervisedEmployeesList(user,setSupervisedEmployees){var userEmail=user.email;var colRef=db.collection('EmployeeDatabase').where('uid','!=',null).where('superiorsList','array-contains',\"\".concat(userEmail));colRef.get().then(function(querySnapshot){var supervisedEmployees=[];querySnapshot.forEach(function(doc){supervisedEmployees.push(doc.data());});setSupervisedEmployees(supervisedEmployees);}).catch(function(error){alert(\"The following error was thrown: \".concat(error,\". Please contact support.\"));});};// Upload a file to Firebase Storage and get back a link - request file name and folder name (use UID)\nexport var uploadFileToStorage=function uploadFileToStorage(field,file,fileName,folderName,setUploading,setFileSrc,collectionName,setOpen){if(file){setUploading(true);setFileSrc('');var storageRef=storage.ref();var imageRef=storageRef.child(\"\".concat(folderName,\"/\").concat(fileName,\".\").concat(file.name.split('.').pop()));imageRef.put(file).then(function(){imageRef.getDownloadURL().then(function(url){var uid=folderName;var docRef=db.collection(collectionName).doc(uid);docRef.get().then(function(doc){if(doc.exists)docRef.update(_defineProperty({},field,url));else docRef.set(_defineProperty({},field,url));}).catch(function(error){return docRef.set(_defineProperty({},field,url));});setFileSrc(url);setUploading(false);if(setOpen)setOpen(true);});}).catch(function(error){alert(\"The following error was thrown: \".concat(error,\". Please contact support.\"));});}else{alert(\"Please select a file first\");}};// Get a list of all employees other than the DB adminstrator\nexport var getAllEmployeesList=function getAllEmployeesList(setAllEmployees){var colRef=db.collection('EmployeeDatabase');colRef.get().then(function(col){if(col){var allDocsData=col.docs.map(function(doc){var data=doc.data();return _objectSpread(_objectSpread({},data),{},{email:doc.id});});setAllEmployees(allDocsData);}else console.log('Collection does not exist');}).catch(function(error){return alert(\"The following error was thrown: \".concat(error,\". Please contact support.\"));});};","map":{"version":3,"sources":["/Users/sidharthchoudhary/nexusar-website/src/services/firestore-queries.js"],"names":["db","storage","addEmployeeUserIDToDB","user","collection","doc","email","update","uid","checkEmployeeExists","setIsEmployee","userEmail","docRef","get","then","exists","catch","error","alert","postEmployeePersonalInfo","formData","getEmployeePersonalInfo","setPersonalData","data","postEmployeeAcademicInfo","set","getEmployeeAcademicInfo","setAcademicData","postEmployeeWorkInfo","getEmployeeWorkInfo","setWorkData","getEmployeeProprietaryWorkInfo","setProprietaryWorkData","postEmployeeSkillInfo","getEmployeeSkillInfo","setSkillData","postEmployeeBankInfo","getEmployeeBankInfo","setBankData","getSupervisedEmployeesList","setSupervisedEmployees","colRef","where","querySnapshot","supervisedEmployees","forEach","push","uploadFileToStorage","field","file","fileName","folderName","setUploading","setFileSrc","collectionName","setOpen","storageRef","ref","imageRef","child","name","split","pop","put","getDownloadURL","url","getAllEmployeesList","setAllEmployees","col","allDocsData","docs","map","id","console","log"],"mappings":"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","sourcesContent":["import { db, storage } from '../services/firebase.js';\n\n// Add uid for a valid employee to employee database\nconst addEmployeeUserIDToDB = (user) => {\n  db.collection('EmployeeDatabase').doc(user.email).update({ uid: user.uid });\n};\n\n// Check if employee is valid or not\nexport const checkEmployeeExists = (user, setIsEmployee) => {\n  const userEmail = user.email;\n  const docRef = db.collection('EmployeeDatabase').doc(userEmail);\n  docRef\n    .get()\n    .then((doc) => {\n      if (doc.exists) {\n        setIsEmployee(true);\n        addEmployeeUserIDToDB(user);\n      } else setIsEmployee(false);\n    })\n    .catch((error) => alert(`The following error was thrown: ${error}. Please contact support.`));\n};\n\n// Employee Personal Information\nexport const postEmployeePersonalInfo = (uid, formData) => {\n  db.collection('EmployeePersonalInfo').doc(uid).update(formData);\n};\n\nexport const getEmployeePersonalInfo = (uid, setPersonalData) => {\n  const docRef = db.collection('EmployeePersonalInfo').doc(uid);\n  docRef\n    .get()\n    .then((doc) => {\n      if (doc.exists) setPersonalData(doc.data());\n    })\n    .catch((error) => alert(`The following error was thrown: ${error}. Please contact support.`));\n};\n\n// Employee Academic Information\nexport const postEmployeeAcademicInfo = (uid, formData) => {\n  db.collection('EmployeeAcademicInfo').doc(uid).set(formData);\n};\n\nexport const getEmployeeAcademicInfo = (uid, setAcademicData) => {\n  const docRef = db.collection('EmployeeAcademicInfo').doc(uid);\n  docRef\n    .get()\n    .then((doc) => {\n      if (doc.exists) setAcademicData(doc.data());\n    })\n    .catch((error) => alert(`The following error was thrown: ${error}. Please contact support.`));\n};\n\n// Employee Work Information\nexport const postEmployeeWorkInfo = (uid, formData) => {\n  db.collection('EmployeeWorkInfo').doc(uid).set(formData);\n};\n\nexport const getEmployeeWorkInfo = (uid, setWorkData) => {\n  const docRef = db.collection('EmployeeWorkInfo').doc(uid);\n  docRef\n    .get()\n    .then((doc) => {\n      if (doc.exists) setWorkData(doc.data());\n    })\n    .catch((error) => alert(`The following error was thrown: ${error}. Please contact support.`));\n};\n\nexport const getEmployeeProprietaryWorkInfo = (userEmail, setProprietaryWorkData) => {\n  const docRef = db.collection('EmployeeDatabase').doc(userEmail);\n  docRef\n    .get()\n    .then((doc) => {\n      if (doc.exists) setProprietaryWorkData(doc.data());\n    })\n    .catch((error) => alert(`The following error was thrown: ${error}. Please contact support.`));\n};\n\n// Employee Skill Information\nexport const postEmployeeSkillInfo = (uid, formData) => {\n  db.collection('EmployeeSkillInfo').doc(uid).set(formData);\n};\n\nexport const getEmployeeSkillInfo = (uid, setSkillData) => {\n  const docRef = db.collection('EmployeeSkillInfo').doc(uid);\n  docRef\n    .get()\n    .then((doc) => {\n      if (doc.exists) setSkillData(doc.data());\n    })\n    .catch((error) => alert(`The following error was thrown: ${error}. Please contact support.`));\n};\n\n// Employee Bank Information\nexport const postEmployeeBankInfo = (uid, formData) => {\n  db.collection('EmployeeBankInfo').doc(uid).set(formData);\n};\n\nexport const getEmployeeBankInfo = (uid, setBankData) => {\n  const docRef = db.collection('EmployeeBankInfo').doc(uid);\n  docRef\n    .get()\n    .then((doc) => {\n      if (doc.exists) setBankData(doc.data());\n    })\n    .catch((error) => alert(`The following error was thrown: ${error}. Please contact support.`));\n};\n\n// List all supervised employees under an employee\n// Send data back as - List of Objects - [{uid: , name: , position: },{...},{...}]\nexport const getSupervisedEmployeesList = (user, setSupervisedEmployees) => {\n  const userEmail = user.email;\n  const colRef = db\n    .collection('EmployeeDatabase')\n    .where('uid', '!=', null)\n    .where('superiorsList', 'array-contains', `${userEmail}`);\n  colRef\n    .get()\n    .then((querySnapshot) => {\n      const supervisedEmployees = [];\n      querySnapshot.forEach((doc) => {\n        supervisedEmployees.push(doc.data());\n      });\n      setSupervisedEmployees(supervisedEmployees);\n    })\n    .catch((error) => {\n      alert(`The following error was thrown: ${error}. Please contact support.`);\n    });\n};\n\n// Upload a file to Firebase Storage and get back a link - request file name and folder name (use UID)\nexport const uploadFileToStorage = (\n  field,\n  file,\n  fileName,\n  folderName,\n  setUploading,\n  setFileSrc,\n  collectionName,\n  setOpen\n) => {\n  if (file) {\n    setUploading(true);\n    setFileSrc('');\n    const storageRef = storage.ref();\n    const imageRef = storageRef.child(`${folderName}/${fileName}.${file.name.split('.').pop()}`);\n    imageRef\n      .put(file)\n      .then(() => {\n        imageRef.getDownloadURL().then((url) => {\n          const uid = folderName;\n          const docRef = db.collection(collectionName).doc(uid);\n\n          docRef\n            .get()\n            .then((doc) => {\n              if (doc.exists) docRef.update({ [field]: url });\n              else docRef.set({ [field]: url });\n            })\n            .catch((error) => docRef.set({ [field]: url }));\n\n          setFileSrc(url);\n          setUploading(false);\n          if (setOpen) setOpen(true);\n        });\n      })\n      .catch((error) => {\n        alert(`The following error was thrown: ${error}. Please contact support.`);\n      });\n  } else {\n    alert(`Please select a file first`);\n  }\n};\n\n// Get a list of all employees other than the DB adminstrator\nexport const getAllEmployeesList = (setAllEmployees) => {\n  const colRef = db.collection('EmployeeDatabase');\n  colRef\n    .get()\n    .then((col) => {\n      if (col) {\n        const allDocsData = col.docs.map((doc) => {\n          const data = doc.data();\n          return { ...data, email: doc.id };\n        });\n        setAllEmployees(allDocsData);\n      } else console.log('Collection does not exist');\n    })\n    .catch((error) => alert(`The following error was thrown: ${error}. Please contact support.`));\n};\n"]},"metadata":{},"sourceType":"module"}