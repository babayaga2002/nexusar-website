{"ast":null,"code":"import _slicedToArray from\"/Users/sidharthchoudhary/nexusar-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import{getEmployeeAcademicInfo}from'../../../services/firestore-queries';import{Box}from'@mui/system';import{Grid,Divider}from'@mui/material';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var EmployeeAcademic=function EmployeeAcademic(props){var uid=props.uid;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),academicData=_useState2[0],setAcademicData=_useState2[1];useEffect(function(){getEmployeeAcademicInfo(uid,setAcademicData);},[uid]);var documentLink=function documentLink(url,name){if(!name)name=url;return/*#__PURE__*/_jsx(\"a\",{target:\"_blank\",rel:\"noreferrer\",href:url,style:{color:'#0071e3',textDecoration:'underline'},children:name});};var dataList=[{label:'Resume (in PDF)',value:documentLink(academicData.resumeValue,'Resume.pdf')},{label:'Linkedin Profile',value:documentLink(academicData.linkedinProfileValue)},{label:'Email Address',value:academicData.emailAddressValue},{label:'Offical Email Address',value:academicData.officalEmailAddressValue},{label:'UG College Name',value:academicData.UGCollegeNameValue},{label:'UG CGPA (or current CGPA)',value:academicData.UGCGPAValue},{label:'UG Gradesheet (in PDF)',value:documentLink(academicData.UGGradeSheetValue,'UG-Gradesheet.pdf')},{label:'UG Degree (in PDF)',value:documentLink(academicData.UGDegreeSheetValue,'UG-Degree.pdf')},{label:'PG College Name',value:academicData.PGCollegeNameValue},{label:'PG CGPA (or current CGPA)',value:academicData.PGCGPAValue},{label:'PG Gradesheet (in PDF)',value:documentLink(academicData.PGGradeSheetValue,'PG-Gradesheet.pdf')},{label:'PG Degree (in PDF)',value:documentLink(academicData.PGDegreeSheetValue,'PG-Degree.pdf')}];return/*#__PURE__*/_jsxs(Box,{sx:{py:2},children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Academic Details\"}),/*#__PURE__*/_jsx(Divider,{light:true,style:{margin:'8px 0'}}),dataList.map(function(data,index){return/*#__PURE__*/_jsxs(Grid,{container:true,sx:{py:0.2,alignItems:'center'},children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:5,children:data.label}),/*#__PURE__*/_jsx(Grid,{item:true,xs:1}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,sx:{wordWrap:'break-word'},children:data.value})]},data.label);})]});};export default EmployeeAcademic;","map":{"version":3,"sources":["/Users/sidharthchoudhary/nexusar-website/src/components/Dashboard/SupervisedEmployees/EmployeeAcademic.js"],"names":["useState","useEffect","getEmployeeAcademicInfo","Box","Grid","Divider","EmployeeAcademic","props","uid","academicData","setAcademicData","documentLink","url","name","color","textDecoration","dataList","label","value","resumeValue","linkedinProfileValue","emailAddressValue","officalEmailAddressValue","UGCollegeNameValue","UGCGPAValue","UGGradeSheetValue","UGDegreeSheetValue","PGCollegeNameValue","PGCGPAValue","PGGradeSheetValue","PGDegreeSheetValue","py","margin","map","data","index","alignItems","wordWrap"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { getEmployeeAcademicInfo } from '../../../services/firestore-queries';\nimport { Box } from '@mui/system';\nimport { Grid, Divider } from '@mui/material';\n\nconst EmployeeAcademic = (props) => {\n  const { uid } = props;\n  const [academicData, setAcademicData] = useState('');\n  useEffect(() => {\n    getEmployeeAcademicInfo(uid, setAcademicData);\n  }, [uid]);\n\n  const documentLink = (url, name) => {\n    if (!name) name = url;\n    return (\n      <a target=\"_blank\" rel=\"noreferrer\" href={url} style={{ color: '#0071e3', textDecoration: 'underline' }}>\n        {name}\n      </a>\n    );\n  };\n\n  const dataList = [\n    { label: 'Resume (in PDF)', value: documentLink(academicData.resumeValue, 'Resume.pdf') },\n    { label: 'Linkedin Profile', value: documentLink(academicData.linkedinProfileValue) },\n    { label: 'Email Address', value: academicData.emailAddressValue },\n    { label: 'Offical Email Address', value: academicData.officalEmailAddressValue },\n    { label: 'UG College Name', value: academicData.UGCollegeNameValue },\n    { label: 'UG CGPA (or current CGPA)', value: academicData.UGCGPAValue },\n    { label: 'UG Gradesheet (in PDF)', value: documentLink(academicData.UGGradeSheetValue, 'UG-Gradesheet.pdf') },\n    { label: 'UG Degree (in PDF)', value: documentLink(academicData.UGDegreeSheetValue, 'UG-Degree.pdf') },\n    { label: 'PG College Name', value: academicData.PGCollegeNameValue },\n    { label: 'PG CGPA (or current CGPA)', value: academicData.PGCGPAValue },\n    { label: 'PG Gradesheet (in PDF)', value: documentLink(academicData.PGGradeSheetValue, 'PG-Gradesheet.pdf') },\n    { label: 'PG Degree (in PDF)', value: documentLink(academicData.PGDegreeSheetValue, 'PG-Degree.pdf') },\n  ];\n\n  return (\n    <Box sx={{ py: 2 }}>\n      <h4>Academic Details</h4>\n      <Divider light style={{ margin: '8px 0' }} />\n      {dataList.map((data, index) => (\n        <Grid key={data.label} container sx={{ py: 0.2, alignItems: 'center' }}>\n          <Grid item xs={5}>\n            {data.label}\n          </Grid>\n          <Grid item xs={1} />\n          <Grid item xs={6} sx={{ wordWrap: 'break-word' }}>\n            {data.value}\n          </Grid>\n        </Grid>\n      ))}\n    </Box>\n  );\n};\n\nexport default EmployeeAcademic;\n"]},"metadata":{},"sourceType":"module"}