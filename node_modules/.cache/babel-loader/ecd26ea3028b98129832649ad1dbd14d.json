{"ast":null,"code":"import _slicedToArray from\"/Users/sidharthchoudhary/nexusar-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';var useInput=function useInput(validateValue,initValue){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),enteredValue=_useState2[0],setEnteredValue=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isTouched=_useState4[0],setIsTouched=_useState4[1];useEffect(function(){if(initValue)setEnteredValue(initValue);},[initValue]);var valueIsValid=validateValue(enteredValue);var hasError=!valueIsValid&&isTouched;var valueChangeHandler=function valueChangeHandler(event){setEnteredValue(event.target.value);};var inputBlurHandler=function inputBlurHandler(event){setIsTouched(true);};var reset=function reset(){setIsTouched(false);};return{value:enteredValue,isValid:valueIsValid,hasError:hasError,valueChangeHandler:valueChangeHandler,inputBlurHandler:inputBlurHandler,reset:reset};};export default useInput;","map":{"version":3,"sources":["/Users/sidharthchoudhary/nexusar-website/src/hooks/use-input.js"],"names":["useState","useEffect","useInput","validateValue","initValue","enteredValue","setEnteredValue","isTouched","setIsTouched","valueIsValid","hasError","valueChangeHandler","event","target","value","inputBlurHandler","reset","isValid"],"mappings":"+JAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,aAAD,CAAgBC,SAAhB,CAA8B,CAC7C,cAAwCJ,QAAQ,CAAC,EAAD,CAAhD,wCAAOK,YAAP,eAAqBC,eAArB,eACA,eAAkCN,QAAQ,CAAC,KAAD,CAA1C,yCAAOO,SAAP,eAAkBC,YAAlB,eAEAP,SAAS,CAAC,UAAM,CACd,GAAIG,SAAJ,CAAeE,eAAe,CAACF,SAAD,CAAf,CAChB,CAFQ,CAEN,CAACA,SAAD,CAFM,CAAT,CAIA,GAAMK,CAAAA,YAAY,CAAGN,aAAa,CAACE,YAAD,CAAlC,CACA,GAAMK,CAAAA,QAAQ,CAAG,CAACD,YAAD,EAAiBF,SAAlC,CAEA,GAAMI,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,KAAD,CAAW,CACpCN,eAAe,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf,CACD,CAFD,CAIA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACH,KAAD,CAAW,CAClCJ,YAAY,CAAC,IAAD,CAAZ,CACD,CAFD,CAIA,GAAMQ,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CAClBR,YAAY,CAAC,KAAD,CAAZ,CACD,CAFD,CAIA,MAAO,CACLM,KAAK,CAAET,YADF,CAELY,OAAO,CAAER,YAFJ,CAGLC,QAAQ,CAARA,QAHK,CAILC,kBAAkB,CAAlBA,kBAJK,CAKLI,gBAAgB,CAAhBA,gBALK,CAMLC,KAAK,CAALA,KANK,CAAP,CAQD,CA/BD,CAiCA,cAAed,CAAAA,QAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useInput = (validateValue, initValue) => {\n  const [enteredValue, setEnteredValue] = useState('');\n  const [isTouched, setIsTouched] = useState(false);\n\n  useEffect(() => {\n    if (initValue) setEnteredValue(initValue);\n  }, [initValue]);\n\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid && isTouched;\n\n  const valueChangeHandler = (event) => {\n    setEnteredValue(event.target.value);\n  };\n\n  const inputBlurHandler = (event) => {\n    setIsTouched(true);\n  };\n\n  const reset = () => {\n    setIsTouched(false);\n  };\n\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset,\n  };\n};\n\nexport default useInput;\n"]},"metadata":{},"sourceType":"module"}