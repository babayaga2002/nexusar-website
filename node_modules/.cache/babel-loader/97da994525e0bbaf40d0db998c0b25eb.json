{"ast":null,"code":"import _regeneratorRuntime from\"/Users/sidharthchoudhary/nexusar-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/sidharthchoudhary/nexusar-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import firebase from'firebase/app';import{auth}from'../firebase';var googleProvider=new firebase.auth.GoogleAuthProvider();var googleAuth=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res,user;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return auth.signInWithPopup(googleProvider);case 3:res=_context.sent;// eslint-disable-next-line no-unused-vars\nuser=res.user;// TODO: Handle the database queries later on..\n// const query = await db.collection('users').where('uid', '==', user.uid).get();\n// if (query.docs.length === 0) {\n//   await db.collection('users').add({\n//     uid: user.uid,\n//     name: user.displayName,\n//     authProvider: 'google',\n//     email: user.email,\n//   });\n// }\n_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);console.error(_context.t0);case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function googleAuth(){return _ref.apply(this,arguments);};}();export default googleAuth;","map":{"version":3,"sources":["/Users/sidharthchoudhary/nexusar-website/src/services/auth/google-auth.js"],"names":["firebase","auth","googleProvider","GoogleAuthProvider","googleAuth","signInWithPopup","res","user","console","error"],"mappings":"2TAAA,MAAOA,CAAAA,QAAP,KAAqB,cAArB,CACA,OAASC,IAAT,KAAqB,aAArB,CAEA,GAAMC,CAAAA,cAAc,CAAG,GAAIF,CAAAA,QAAQ,CAACC,IAAT,CAAcE,kBAAlB,EAAvB,CAEA,GAAMC,CAAAA,UAAU,0FAAG,sLAEGH,CAAAA,IAAI,CAACI,eAAL,CAAqBH,cAArB,CAFH,QAETI,GAFS,eAGf;AACMC,IAJS,CAIFD,GAAG,CAACC,IAJF,CAMf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfe,+EAiBfC,OAAO,CAACC,KAAR,cAjBe,oEAAH,kBAAVL,CAAAA,UAAU,0CAAhB,CAqBA,cAAeA,CAAAA,UAAf","sourcesContent":["import firebase from 'firebase/app';\nimport { auth } from '../firebase';\n\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\n\nconst googleAuth = async () => {\n  try {\n    const res = await auth.signInWithPopup(googleProvider);\n    // eslint-disable-next-line no-unused-vars\n    const user = res.user;\n\n    // TODO: Handle the database queries later on..\n    // const query = await db.collection('users').where('uid', '==', user.uid).get();\n    // if (query.docs.length === 0) {\n    //   await db.collection('users').add({\n    //     uid: user.uid,\n    //     name: user.displayName,\n    //     authProvider: 'google',\n    //     email: user.email,\n    //   });\n    // }\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport default googleAuth;\n"]},"metadata":{},"sourceType":"module"}