{"ast":null,"code":"var _jsxFileName = \"/Users/sidharthchoudhary/nexusar-website/src/components/ui/avatar-image/AvatarImage.js\",\n    _s = $RefreshSig$();\n\nimport { Box } from '@mui/system';\nimport { Avatar, IconButton } from '@mui/material';\nimport CameraAltRoundedIcon from '@mui/icons-material/CameraAltRounded';\nimport classes from './AvatarImage.module.css';\nimport { useEffect, useState } from 'react';\nimport { uploadFileToStorage } from '../../../services/firestore-queries';\nimport IOSSpinner from '../ios-spinner/IOSSpinner';\nimport SuccessSnackbar from '../../Dashboard/SuccessSnackbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvatarImage = props => {\n  _s();\n\n  const {\n    src,\n    alt,\n    folderName,\n    setImageSrc,\n    collectionName\n  } = props;\n  const [image, setImage] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  const clickHandler = () => {\n    document.getElementsByClassName(classes.inputFile)[0].click();\n  };\n\n  const onImageChange = event => {\n    const reader = new FileReader();\n    const file = event.target.files[0];\n\n    if (file) {\n      reader.onload = () => {\n        if (reader.readyState === 2) setImage(file);\n      };\n\n      reader.readAsDataURL(event.target.files[0]);\n    } else setImage(null);\n  };\n\n  useEffect(() => {\n    if (image && folderName) uploadFileToStorage('profilePictureValue', image, 'profile', folderName, setUploading, setImageSrc, collectionName, setOpen);\n  }, [image, folderName, setImageSrc, collectionName]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    pt: {\n      sm: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        alt: alt,\n        sx: {\n          width: 200,\n          height: 200,\n          opacity: uploading ? 0.25 : 1\n        },\n        src: src\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), uploading && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: 'relative',\n          top: -120\n        },\n        children: /*#__PURE__*/_jsxDEV(IOSSpinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), !uploading && /*#__PURE__*/_jsxDEV(IconButton, {\n      style: {\n        top: '-50px',\n        right: '-20px',\n        background: 'white'\n      },\n      onClick: clickHandler,\n      children: [/*#__PURE__*/_jsxDEV(CameraAltRoundedIcon, {\n        style: {\n          fontSize: '24px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        className: classes.inputFile,\n        accept: \"image/*\",\n        onChange: e => {\n          onImageChange(e);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SuccessSnackbar, {\n      open: open,\n      setOpen: setOpen,\n      info: \"Image updated succesfully.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvatarImage, \"iPoZP6cPjdg4t+w3nLVxP/AI/XI=\");\n\n_c = AvatarImage;\nexport default AvatarImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvatarImage\");","map":{"version":3,"sources":["/Users/sidharthchoudhary/nexusar-website/src/components/ui/avatar-image/AvatarImage.js"],"names":["Box","Avatar","IconButton","CameraAltRoundedIcon","classes","useEffect","useState","uploadFileToStorage","IOSSpinner","SuccessSnackbar","AvatarImage","props","src","alt","folderName","setImageSrc","collectionName","image","setImage","uploading","setUploading","open","setOpen","clickHandler","document","getElementsByClassName","inputFile","click","onImageChange","event","reader","FileReader","file","target","files","onload","readyState","readAsDataURL","sm","width","height","opacity","position","top","right","background","fontSize","e"],"mappings":"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","sourcesContent":["import { Box } from '@mui/system';\nimport { Avatar, IconButton } from '@mui/material';\nimport CameraAltRoundedIcon from '@mui/icons-material/CameraAltRounded';\nimport classes from './AvatarImage.module.css';\nimport { useEffect, useState } from 'react';\nimport { uploadFileToStorage } from '../../../services/firestore-queries';\nimport IOSSpinner from '../ios-spinner/IOSSpinner';\nimport SuccessSnackbar from '../../Dashboard/SuccessSnackbar';\n\nconst AvatarImage = (props) => {\n  const { src, alt, folderName, setImageSrc, collectionName } = props;\n  const [image, setImage] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  const clickHandler = () => {\n    document.getElementsByClassName(classes.inputFile)[0].click();\n  };\n\n  const onImageChange = (event) => {\n    const reader = new FileReader();\n    const file = event.target.files[0];\n\n    if (file) {\n      reader.onload = () => {\n        if (reader.readyState === 2) setImage(file);\n      };\n      reader.readAsDataURL(event.target.files[0]);\n    } else setImage(null);\n  };\n\n  useEffect(() => {\n    if (image && folderName)\n      uploadFileToStorage(\n        'profilePictureValue',\n        image,\n        'profile',\n        folderName,\n        setUploading,\n        setImageSrc,\n        collectionName,\n        setOpen\n      );\n  }, [image, folderName, setImageSrc, collectionName]);\n\n  return (\n    <Box pt={{ sm: 4 }}>\n      <Box>\n        <Avatar alt={alt} sx={{ width: 200, height: 200, opacity: uploading ? 0.25 : 1 }} src={src} />\n        {uploading && (\n          <Box sx={{ position: 'relative', top: -120 }}>\n            <IOSSpinner />\n          </Box>\n        )}\n      </Box>\n      {!uploading && (\n        <IconButton style={{ top: '-50px', right: '-20px', background: 'white' }} onClick={clickHandler}>\n          <CameraAltRoundedIcon style={{ fontSize: '24px' }} />\n          <input\n            type=\"file\"\n            className={classes.inputFile}\n            accept=\"image/*\"\n            onChange={(e) => {\n              onImageChange(e);\n            }}\n          />\n        </IconButton>\n      )}\n      <SuccessSnackbar open={open} setOpen={setOpen} info=\"Image updated succesfully.\" />\n    </Box>\n  );\n};\n\nexport default AvatarImage;\n"]},"metadata":{},"sourceType":"module"}