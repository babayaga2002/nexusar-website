{"ast":null,"code":"var _jsxFileName = \"/Users/sidharthchoudhary/nexusar-website/src/components/ui/input-file/InputFile.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Box } from '@mui/system';\nimport { IconButton } from '@mui/material';\nimport BackupRoundedIcon from '@mui/icons-material/BackupRounded';\nimport IOSSpinner from '../ios-spinner/IOSSpinner';\nimport classes from './InputFile.module.css';\nimport { uploadFileToStorage } from '../../../services/firestore-queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InputFile = props => {\n  _s();\n\n  const {\n    label,\n    placeholder,\n    folderName,\n    value,\n    setValue,\n    field,\n    collectionName\n  } = props;\n  const [file, setFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n\n  const clickHandler = () => {\n    document.getElementById(`${id}_file`).click();\n  };\n\n  const onFileChange = event => {\n    const reader = new FileReader();\n    const file = event.target.files[0];\n\n    if (file) {\n      reader.onload = () => {\n        if (reader.readyState === 2) setFile(file);\n      };\n\n      reader.readAsDataURL(event.target.files[0]);\n    } else setFile(null);\n  };\n\n  useEffect(() => {\n    if (file) uploadFileToStorage(field, file, `${field.toLowerCase()}`, folderName, setUploading, setValue, collectionName, () => {});\n  }, [file, field, folderName, setValue, collectionName]);\n  const id = label.toLowerCase().split(' ').join('-');\n  const url = value ? value : '#';\n  return /*#__PURE__*/_jsxDEV(Box, {\n    pr: {\n      sm: 6\n    },\n    py: 1,\n    sx: {\n      display: 'grid'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: id,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      mt: '10px',\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: url,\n        target: \"_blank\",\n        rel: \"noreferrer\",\n        style: {\n          display: 'contents'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          id: id,\n          type: \"text\",\n          className: classes.inputField,\n          placeholder: placeholder,\n          value: value ? value : '',\n          style: {\n            textDecoration: value ? 'underline' : 'none'\n          },\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), uploading && /*#__PURE__*/_jsxDEV(Box, {\n        pl: 2,\n        children: /*#__PURE__*/_jsxDEV(IOSSpinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), !uploading && /*#__PURE__*/_jsxDEV(IconButton, {\n        className: classes.iconButton,\n        onClick: clickHandler,\n        children: [/*#__PURE__*/_jsxDEV(BackupRoundedIcon, {\n          style: {\n            fontSize: '32px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: `${id}_file`,\n          className: classes.inputFile,\n          accept: \"application/pdf\",\n          onChange: e => {\n            onFileChange(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputFile, \"keL+ovTJKYJ3oLXJ+zys9pKiYv8=\");\n\n_c = InputFile;\nexport default InputFile;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputFile\");","map":{"version":3,"sources":["/Users/sidharthchoudhary/nexusar-website/src/components/ui/input-file/InputFile.js"],"names":["useState","useEffect","Box","IconButton","BackupRoundedIcon","IOSSpinner","classes","uploadFileToStorage","InputFile","props","label","placeholder","folderName","value","setValue","field","collectionName","file","setFile","uploading","setUploading","clickHandler","document","getElementById","id","click","onFileChange","event","reader","FileReader","target","files","onload","readyState","readAsDataURL","toLowerCase","split","join","url","sm","display","inputField","textDecoration","iconButton","fontSize","inputFile","e"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { Box } from '@mui/system';\nimport { IconButton } from '@mui/material';\nimport BackupRoundedIcon from '@mui/icons-material/BackupRounded';\nimport IOSSpinner from '../ios-spinner/IOSSpinner';\nimport classes from './InputFile.module.css';\nimport { uploadFileToStorage } from '../../../services/firestore-queries';\n\nconst InputFile = (props) => {\n  const { label, placeholder, folderName, value, setValue, field, collectionName } = props;\n\n  const [file, setFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n\n  const clickHandler = () => {\n    document.getElementById(`${id}_file`).click();\n  };\n\n  const onFileChange = (event) => {\n    const reader = new FileReader();\n    const file = event.target.files[0];\n\n    if (file) {\n      reader.onload = () => {\n        if (reader.readyState === 2) setFile(file);\n      };\n      reader.readAsDataURL(event.target.files[0]);\n    } else setFile(null);\n  };\n\n  useEffect(() => {\n    if (file)\n      uploadFileToStorage(\n        field,\n        file,\n        `${field.toLowerCase()}`,\n        folderName,\n        setUploading,\n        setValue,\n        collectionName,\n        () => {}\n      );\n  }, [file, field, folderName, setValue, collectionName]);\n\n  const id = label.toLowerCase().split(' ').join('-');\n  const url = value ? value : '#';\n\n  return (\n    <Box pr={{ sm: 6 }} py={1} sx={{ display: 'grid' }}>\n      <label htmlFor={id}>{label}</label>\n      <Box display=\"flex\" mt={'10px'}>\n        <a href={url} target=\"_blank\" rel=\"noreferrer\" style={{ display: 'contents' }}>\n          <input\n            id={id}\n            type=\"text\"\n            className={classes.inputField}\n            placeholder={placeholder}\n            value={value ? value : ''}\n            style={{ textDecoration: value ? 'underline' : 'none' }}\n            readOnly\n          />\n        </a>\n        {uploading && (\n          <Box pl={2}>\n            <IOSSpinner />\n          </Box>\n        )}\n        {!uploading && (\n          <IconButton className={classes.iconButton} onClick={clickHandler}>\n            <BackupRoundedIcon style={{ fontSize: '32px' }} />\n            <input\n              type=\"file\"\n              id={`${id}_file`}\n              className={classes.inputFile}\n              accept=\"application/pdf\"\n              onChange={(e) => {\n                onFileChange(e);\n              }}\n            />\n          </IconButton>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default InputFile;\n"]},"metadata":{},"sourceType":"module"}